{
  "swagger": "2.0",
  "info": {
    "title": "Pharma API",
    "description": "W01-W04 CSE 341 - Rune Larsen",
    "name": "Rune",
    "version": "1.0.0",
    "contact": {
      "name": "Rune Larsen",
      "email": "api@example.com",
      "url": "http://example.com/pharma"
    }
  },
  "host": "localhost:4000",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "OAuth2": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "http://example.com/oauth/authorize"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/wife": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/son": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/daughter1": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/daughter2": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Age3": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/savanna": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/hannah": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Age": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/savanna2": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/hannah2": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Age2": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/contact": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/contacts/": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to get all contacts",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to create a contact",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "favoriteColor": {
                  "example": "any"
                },
                "birthday": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to get one contact",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to update all contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "favoriteColor": {
                  "example": "any"
                },
                "birthday": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "description": "Endpoint to delete a contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/meds/": {
      "get": {
        "tags": [
          "Meds"
        ],
        "description": "Endpoint to get all Medicines",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Meds"
        ],
        "description": "Endpoint to create a Meds",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "Name": {
                  "example": "any"
                },
                "FillDate": {
                  "example": "any"
                },
                "Prescription": {
                  "example": "any"
                },
                "Rx": {
                  "example": "any"
                },
                "Qty": {
                  "example": "any"
                },
                "Prescriber": {
                  "example": "any"
                },
                "Pharmacist": {
                  "example": "any"
                },
                "NDC": {
                  "example": "any"
                },
                "Insurance": {
                  "example": "any"
                },
                "Claim": {
                  "example": "any"
                },
                "Price": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/meds/{id}": {
      "get": {
        "tags": [
          "Meds"
        ],
        "description": "Endpoint to get one Meds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Meds"
        ],
        "description": "Endpoint to update all Meds",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "Name": {
                  "example": "any"
                },
                "FillDate": {
                  "example": "any"
                },
                "Prescription": {
                  "example": "any"
                },
                "Rx": {
                  "example": "any"
                },
                "Qty": {
                  "example": "any"
                },
                "Prescriber": {
                  "example": "any"
                },
                "Pharmacist": {
                  "example": "any"
                },
                "NDC": {
                  "example": "any"
                },
                "Insurance": {
                  "example": "any"
                },
                "Claim": {
                  "example": "any"
                },
                "Price": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Meds"
        ],
        "description": "Endpoint to delete a Meds",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/items/": {
      "post": {
        "tags": [
          "StorageLocation"
        ],
        "description": "Endpoint to create a StorageLocation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "StorageLocationId": {
                  "example": "any"
                },
                "StorageLocationName": {
                  "example": "any"
                },
                "StorageLocationCreatedAt": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "StorageLocation"
        ],
        "description": "Endpoint to get all StorageLocation",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "tags": [
          "StorageLocation"
        ],
        "description": "Endpoint to get one StorageLocation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "StorageLocation"
        ],
        "description": "Endpoint to update all StorageLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "StorageLocationName": {
                  "example": "any"
                },
                "StorageLocation": {
                  "example": "any"
                },
                "StorageLocationUpdatedAt": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "StorageLocation"
        ],
        "description": "Endpoint to delete a StorageLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "Internal Server Error"
        },
        "details": {
          "type": "string",
          "example": "Error details here"
        }
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Sarah"
        },
        "lastName": {
          "type": "string",
          "example": "Birch"
        },
        "email": {
          "type": "string",
          "example": "sarah@test.com"
        },
        "favoriteColor": {
          "type": "string",
          "example": "Blue"
        },
        "birthday": {
          "type": "string",
          "example": "1990-01-01"
        }
      }
    },
    "Pharma": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "example": "Rune,Larsen"
        },
        "Fill Date": {
          "type": "string",
          "example": "12/18/2024"
        },
        "Prescription": {
          "type": "string",
          "example": "Cyclobenzaprine 10mg Tablets"
        },
        "Rx #": {
          "type": "number",
          "example": 143658112491
        },
        "Qty": {
          "type": "number",
          "example": 90
        },
        "Prescriber": {
          "type": "string",
          "example": "Wilson,Erica"
        },
        "Pharmacist": {
          "type": "string",
          "example": "LBH"
        },
        "NDC#": {
          "type": "number",
          "example": 29300041510
        },
        "Insurance": {
          "type": "string",
          "example": "APM"
        },
        "Claim Reference #": {
          "type": "object",
          "properties": {
            "low": {
              "type": "number",
              "example": 825690111
            },
            "high": {
              "type": "number",
              "example": 56702253
            },
            "unsigned": {
              "type": "boolean",
              "example": false
            }
          }
        },
        "Price": {
          "type": "string",
          "example": "$0.00"
        }
      }
    },
    "Item": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Sarah"
        },
        "lastName": {
          "type": "string",
          "example": "Birch"
        },
        "email": {
          "type": "string",
          "example": "sarah@test.com"
        },
        "favoriteColor": {
          "type": "string",
          "example": "Blue"
        },
        "birthday": {
          "type": "string",
          "example": "1990-01-01"
        }
      }
    }
  },
  "parameters": {
    "limitParam": {
      "name": "limit",
      "in": "query",
      "description": "Maximum number of records to return",
      "type": "integer"
    }
  },
  "responses": {
    "500": {
      "description": "Server Error",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "NotFound": {
      "description": "Resource not found"
    },
    "InvalidInput": {
      "description": "Invalid input"
    }
  }
}